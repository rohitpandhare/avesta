<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Doctor Dashboard</title>
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    body {
            background-color: #f0f8ff; /* Light sky blue background */
            color: #333; /* Neutral text color */
            font-family: Arial, sans-serif;
            overflow-x: visible !important;
         }

    /* Sidebar styling */
    aside {
      position: fixed;
      top: 0;
      left: 0;
      width: 256px;
      height: 100vh;
      /* background: #f8f9fa; */
      background-color: #fff;
      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
      overflow-y: auto;
      transition: transform 0.3s ease;
      /* z-index: 10;  */
    }
    
    /* Main content should have left margin to prevent overlap */
    main {
      margin-left: 270px;
      padding: 20px;
      transition: margin-left 0.3s ease;
    }
    
    /* Hamburger menu for mobile */
    .hamburger {
      display: none;
      cursor: pointer;
      padding: 10px;
    }
    
    .hamburger div {
      width: 25px;
      height: 3px;
      background-color: #333;
      margin: 5px 0;
    }
      /* Close button styling */
      .close-icon {
          display: none;
            position: absolute;
            top: 2px;
            right: 10px;
            font-size: 24px;
            font-weight: bold;
            color: #007bff;
            cursor: pointer;
            margin-bottom: 20px;
        }

    .close-icon:hover {
      color: #475565; /* Change color on hover for better interactivity */
    }

    
    @media (max-width: 768px) {
      .close-icon{
        display: block;
      }
      aside {
        transform: translateX(-100%);
      }
      aside.open {
        transform: translateX(0);
      }
      aside.open + main {
        margin-left: 256px;
    }
      .hamburger {
        display: block;
      }
      main {
        margin-left: 0;
        padding-top: 60px;
      }
    }

     /* Table styles */
     .table-container {
            overflow-x: auto;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 1rem;
        }
        thead {
            background-color: #e6f7ff; /* Light bluish shade for headers */
            }

        .table th,
        .table td {
            padding: 0.75rem;
            vertical-align: top;
            border-top: 1px solid #dee2e6;
            text-align: left;
        }

        .table thead th {
            vertical-align: bottom;
            border-bottom: 2px solid #dee2e6;
        }

        .table tbody + tbody {
            border-top: 2px solid #dee2e6;
        }

        .table .table {
            background-color: #fff;
        }

        .table-sm th,
        .table-sm td {
            padding: 0.3rem;
        }

        .table-bordered {
            border: 1px solid #dee2e6;
        }

        .table-bordered th,
        .table-bordered td {
            border: 1px solid #dee2e6;
        }

        .table-bordered thead th,
        .table-bordered thead td {
            border-bottom-width: 2px;
        }

        tbody tr:nth-child(odd) {
            background-color: #ffffff; /* White for odd rows */
        }

        tbody tr:nth-child(even) {
            background-color: #e6f7ff; /* Light bluish shade for even rows */
        }

        tbody tr:hover {
            background-color: #bdd1e6; /* Dark blue shade on hover */
            color: #ffffff; /* White text on hover */
        }


        .table-responsive {
            display: block;
            width: 100%;
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
        }

        #statics{
          background-color: #e6f7ff;
        }

        #toast {
      z-index: 9999 !important;
      position: fixed !important;
      top: 1rem !important;
      right: 1rem !important;
    }

      #suggestionsAddPat,
      #suggestionsMedRec,
      #suggestionsPres {
          position: absolute;
          background: white;
          border: 1px solid #ccc;
          width: 100%;
          max-height: 150px;
          overflow-y: auto;
          z-index: 1000; /* Ensure it appears above other elements */
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      }

      /* Better section styling */
section {
    background: white;
    border-radius: 0.5rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    padding: 1.5rem;
    margin-bottom: 2rem;
}

/* Form input consistency */
input, textarea, select {
    transition: all 0.2s ease;
}

input:focus, textarea:focus, select:focus {
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);
}

/* Table improvements */
.table-container {
    border-radius: 0.5rem;
    overflow: hidden;
}

/* Button consistency */
button[type="submit"] {
    transition: all 0.2s ease;
}

button[type="submit"]:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

  </style>

</head>

<body class="bg-gray-100 min-h-screen font-sans antialiased">
  <% if (locals.success || locals.error) { %>
    <div id="toast" role="alert" class="fixed top-4 right-4 flex items-center p-4 max-w-sm w-full space-x-4 text-gray-700 bg-white rounded shadow-lg transform transition-all duration-500">
        <div class="flex-shrink-0">
            <% if (locals.success) { %>
                <svg class="w-6 h-6 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
            <% } else if (locals.error) { %>
                <svg class="w-6 h-6 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            <% } %>
        </div>

        <div class="flex-1" id="topper">
            <% if (locals.success) { %>
                <p class="font-semibold text-green-600">Success!</p>
                <p class="text-sm"><%= success || 'Operation successful.' %></p>
            <% } else if (locals.error) { %>
                <p class="font-semibold text-red-600">Error!</p>
                <p class="text-sm"><%= error || 'An error occurred.' %></p>
            <% } %>
        </div>
        
        <button onclick="closeToast()" class="text-gray-500 hover:text-gray-700">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 
                  10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 
                  4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
            </svg>
        </button>
    </div>
<% } %>

  <div class="flex h-screen relative">
    <div class="hamburger" id="hamburger" onclick="toggleSidebar()">
      <div></div>
      <div></div>
      <div></div>
    </div>
    
    <aside class="w-64 bg-white shadow-lg flex flex-col fixed top-0 h-screen overflow-y-auto" id="sidebar">
      <span class="close-icon" id="close-icon" onclick="closeSidebar()">X</span>
      <br>
      <div class="p-6 border-b border-gray-200 mt-80">
        <h1 class="text-2xl font-bold text-gray-800">Doctor Dashboard</h1>
        <p class="text-sm text-blue-600 mt-1"><%= user?.Name || 'Doctor' %></p>   
        <p class="text-sm text-blue-600 mt-1">DoctorID: <%= user?.DoctorID || '0' %></p>
      </div>
      <!-- side navbar -->
      <nav class="flex-1 p-4">
        <div class="space-y-6">
          <!-- view divs  -->
          <div>
            <p class="text-xs text-gray-500 uppercase font-medium mb-3">View Records</p>
            <ul class="space-y-1">
              <li>
                <a href="#patients-section" class="flex items-center px-3 py-2 text-gray-700 hover:bg-gray-100 rounded-lg transition-colors">
                  <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
                  </svg>
                  Patients
                </a>
              </li>
              <li>
                <a href="#records-section" class="flex items-center px-3 py-2 text-gray-700 hover:bg-gray-100 rounded-lg transition-colors">
                  <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                  </svg>
                  Medical Records
                </a>
              </li>
              <li>
                <a href="#prescriptions-section" class="flex items-center px-3 py-2 text-gray-700 hover:bg-gray-100 rounded-lg transition-colors">
                  <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2.5 2.5 0 00-2.5-2.5H14" />
                  </svg>
                  Prescriptions
                </a>
              </li>
            </ul>
          </div>
          <!-- add divs  -->
          <div>
            <p class="text-xs text-gray-500 uppercase font-medium mb-3">Add New</p>
            <ul class="space-y-1">
              <li>
                <a href="#addPatForm" class="w-full flex items-center px-3 py-2 text-gray-700 hover:bg-gray-100 rounded-lg transition-colors">
                  <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                  </svg>
                  Add Patient
                </a>
              </li>
              <li>
                <a href="#addMedRec" class="w-full flex items-center px-3 py-2 text-gray-700 hover:bg-gray-100 rounded-lg transition-colors">
                  <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                  </svg>
                  Add Medical Record
                </a>
              </li>
              <li>
                <a href="#addPres" class="w-full flex items-center px-3 py-2 text-gray-700 hover:bg-gray-100 rounded-lg transition-colors">
                  <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                  </svg>
                  Add Prescription
                </a>
              </li>
            </ul>
          </div>

        </div>
      </nav>

      <!-- logout button  -->
      <div class="p-4 border-t border-black-200">
        <a href="/auth/logout" class="flex items-center justify-center px-4 py-2 bg-red-600 text-black rounded-lg hover:bg-red-700 transition-colors">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
          </svg>
          Logout
        </a>
      </div>

    </aside>

    <main class="flex-1 overflow-y-auto p-8">
      <!-- header  -->
      <header class="mb-8">
        <h1 class="text-3xl font-bold text-gray-800" id="page-title">Dashboard Overview</h1>
        <p class="text-blue-600 mt-1" id="page-description">Welcome back, <%= user?.Name || 'Doctor' %></p>
      </header>

      <div id="main-content" class="space-y-12">
         <!-- add patients  -->
        <section class="space-y-6" id="addPatForm">
        <h2 class="text-2xl font-semibold text-gray-800">Patients</h2>
          <div class="bg-white rounded-lg shadow overflow-hidden" id="patients-section">
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <!-- <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">DoctorID</th> -->
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">PatientName</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">First Consultation</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Consultation Type</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Treatment Notes</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Delete Relation</th>
                  </tr>
                </thead>

                <tbody class="divide-y divide-gray-200">
                  <% if (typeof doctorPatients !== 'undefined' && doctorPatients.length > 0) { %>
                    <% doctorPatients.forEach(relationship => { %>
                      <tr>
                        <!-- <td class="px-6 py-4"><%= relationship.DoctorID %></td> -->
                        <td class="px-6 py-4"><%= relationship.PatientName || 'N/A' %></td>
                        <td class="px-6 py-4"><%= relationship.FirstConsultation.toLocaleDateString() %></td>
                        <td class="px-6 py-4"><%= relationship.ConsultationType %></td>
                        <td class="px-6 py-4"><%= relationship.TreatmentNotes %></td>
                        <td class="px-6 py-4 whitespace-nowrap">
                          <button onclick="deleteItem('<%= relationship.PatientID%>','relation')" 
                                  class="bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600">
                              Delete
                          </button>
                      </td>
                      </tr>
                    <% }) %>
                  <% } else { %>
                    <tr>
                      <td colspan="5" class="px-6 py-4 text-center text-gray-500">No relationships found</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>

          <!-- patient reg form  -->
          <div class="bg-white rounded-lg shadow-md p-6">
            <h3 class="text-xl font-semibold text-gray-800 mb-6">Add Patients</h3>
            <form action="/doctor/addPatient" method="POST" class="space-y-4">
              <div class="hidden">
                <input type="number" name="DoctorID" value="<%= user.DoctorID %>" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
              </div>
              <!-- <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Patient ID</label>
                <input type="number" name="PatientID" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
              </div> -->
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Patient Name</label>
                <input type="text" id="patientNameAddPat" name="patientName" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" autocomplete="off">
                
                <div id="suggestionsAddPat" class="absolute z-10 bg-white border border-gray-300 w-full rounded-md mt-1 hidden"></div>
            
                <!-- Hidden field to store the selected Patient ID -->
                <input type="hidden" id="patientIDHiddenAddPat" name="PatientID">
            </div>

              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1" >First Consultation Date</label>
                <input type="date" name="FirstConsultation" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" value="<%= new Date().toISOString().split('T')[0] %>"  id="statics">
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Consultation Type</label>
                <select name="ConsultationType" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" id="statics" >
                  <option value="REGULAR">REGULAR</option>
                  <option value="EMERGENCY">EMERGENCY</option>
                  <option value="FOLLOWUP">FOLLOWUP</option>
                </select>
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Treatment Notes</label>
                <textarea name="TreatmentNotes" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-24"></textarea>
              </div>
              <button type="submit" class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">Submit</button>
            </form>
          </div>

        </section>
       
        <section class="space-y-6 mt-12" id="records-section">

        <!-- add medical records  -->
        <section class="space-y-6" id="records-section">
          <h2 class="text-2xl font-semibold text-gray-800">Medical Records</h2>
          <!-- view rec  -->
          <div class="bg-white rounded-lg shadow overflow-hidden">
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">PatientName</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Record Date</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Diagnosis</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Symptoms</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Treatments</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Notes</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Updated By</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Delete Record</th>
                  </tr>
                </thead>
                <tbody class="divide-y divide-gray-200">
                  <% if (typeof medicalRecords !== 'undefined' && medicalRecords.length > 0) { %>
                    <% medicalRecords.forEach(record => { %>
                      <tr>
                        <td class="px-6 py-4"><%= record.PatientName %></td>
                        <td class="px-6 py-4"><%= record.RecordDate.toLocaleDateString() %></td>
                        <td class="px-6 py-4"><%= record.Diagnosis %></td>
                        <td class="px-6 py-4"><%= record.Symptoms %></td>
                        <td class="px-6 py-4"><%= record.Treatments %></td>
                        <td class="px-6 py-4"><%= record.Notes %></td>
                        <td class="px-6 py-4"><%= record.UpdatedBy %></td>
                        <td class="px-6 py-4 whitespace-nowrap">
                          <button onclick="deleteItem('<%= record.RecordID%>','record')" 
                                  class="bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600">
                              Delete
                          </button>
                      </td>
                      </tr>
                    <% }) %>
                  <% } else { %>
                    <tr>
                      <td colspan="9" class="px-6 py-4 text-center text-gray-500">No medical records found</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>

          <!-- add medical rec  -->
          <div class="bg-white rounded-lg shadow-md p-6" id="addMedRec">
            <h3 class="text-xl font-semibold text-gray-800 mb-6">Add Medical Record<s/h3>
              <form action="/doctor/addMedRec" method="POST" class="space-y-4">
                <div class="hidden">
                  <input type="number" name="DoctorID" value="<%= user.DoctorID %>" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
                <!-- <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Patient ID</label>
                  <input type="number" name="PatientID" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div> -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Patient Name</label>
                    <input type="text" id="patientNameMedRec" name="patientName" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" autocomplete="off">
                  
                  <div id="suggestionsMedRec" class="absolute z-10 bg-white border border-gray-300 w-full rounded-md mt-1 hidden"></div>
              
                  <!-- Hidden field to store the selected Patient ID -->
                  <input type="hidden" id="patientIDHiddenMedRec" name="PatientID">
              </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Diagnosis</label>
                  <input type="text" name="Diagnosis" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Symptoms</label>
                  <textarea name="Symptoms" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-24"></textarea>
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Treatments</label>
                  <textarea name="Treatments" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-24"></textarea>
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Record Date</label>
                  <input type="date" name="RecordDate" required value="<%= new Date().toISOString().split('T')[0] %>" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Notes</label>
                  <textarea name="Notes" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-24"></textarea>
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Updated By</label>
                  <select name="UpdatedBy" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    <option value="DOCTOR">DOCTOR</option>
                    <option value="STAFF">STAFF</option>
                  </select>
                </div>
                <button type="submit" class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">Submit</button>
              </form>
          </div>
            
        </section>
      
        <section class="space-y-6 mt-12" id="records-section">

        <!-- add prescriptions  -->
        <section class="space-y-6" id="prescriptions-section">
          <h2 class="text-2xl font-semibold text-gray-800">Prescriptions</h2>
          <!-- view pres  -->
          <div class="bg-white rounded-lg shadow overflow-hidden">
            <div class="overflow-x-auto max-h-[500px]">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50 sticky top-0">
                  <tr>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Date Issued</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Patient Name</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Diagnosis Notes</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Medicines</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Status</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Reference ID</th>
                    <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Delete</th>
                  </tr>
                </thead>
                <tbody class="divide-y divide-gray-200">
                  <% if (prescriptions && prescriptions.length > 0) { %>
                    <% prescriptions.forEach(prescription => { %>
                      <tr >
                        <td class="px-6 py-4"><%= new Date(prescription.DateIssued).toLocaleDateString() %></td>
                        <td class="px-6 py-4"><%= prescription.PatientName || 'N/A' %></td>
                        <td class="px-6 py-4 max-w-xs truncate"><%= prescription.DiagnosisNotes || 'N/A' %></td>
                        <td class="px-6 py-4 max-w-xs whitespace-pre-line"><%= prescription.Medicines || 'N/A' %></td>
                        <td class="px-6 py-4">
                          <span class="px-2 py-1 text-xs font-medium rounded-full <%= prescription.Status === 'ACTIVE' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800' %>">
                            <%= prescription.Status %>
                          </span>
                        </td>
                        <td class="px-6 py-4 font-mono"><%= prescription.GlobalReferenceID %></td>
                        <td class="px-6 py-4 whitespace-nowrap">
                          <button onclick="deleteItem('<%= prescription.PrescriptionID %>','prescription')" 
                                  class="bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600">
                              Delete
                          </button>
                      </td>
                      </tr>
                    <% }) %>
                  <% } else { %>
                    <tr>
                      <td colspan="6" class="px-6 py-4 text-center text-gray-500">No prescriptions found</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>

          <!-- add pres  -->
          <div class="bg-white rounded-lg shadow-md p-6" id="addPres">
            <h3 class="text-xl font-semibold text-gray-800 mb-6">Add Prescription</h3>
            <form action="/doctor/addPres" method="POST" class="space-y-4">
              <div class="hidden">
                <input type="number" name="DoctorID" value="<%= user.DoctorID %>" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
              </div>
              <!-- <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Patient ID</label>
                <input type="number" name="PatientID" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
              </div> -->
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Patient Name</label>
                <input type="text" id="patientNamePres" name="patientName" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" autocomplete="off">
                
                <div id="suggestionsPres" class="absolute z-10 bg-white border border-gray-300 w-full rounded-md mt-1 hidden"></div>
            
                <!-- Hidden field to store the selected Patient ID -->
                <input type="hidden" id="patientIDHiddenPres" name="PatientID">
            </div>
            
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Diagnosis Notes</label>
                <textarea name="DiagnosisNotes" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-24"></textarea>
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Medicines</label>
                <textarea name="Medicines" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-24"></textarea>
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                <select name="Status" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                  <option value="ACTIVE">ACTIVE</option>
                  <option value="INACTIVE">INACTIVE</option>
                </select>
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Date Issued</label>
                <input type="date" name="DateIssued" required value="<%= new Date().toISOString().split('T')[0] %>" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
              </div>
              <button type="submit" class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">Submit</button>
            </form>
          </div>
          
        </section>

      </div>

    </main>
  </div>


<script>
// document.getElementById("patientName").addEventListener("input", function() {
//     let query = this.value.trim();
//     if (query.length < 2) {
//         document.getElementById("suggestions").classList.add("hidden");
//         return;
//     }

//     fetch(`/search-patient?query=${query}`)
//         .then(response => response.json())
//         .then(data => {
//             let suggestions = document.getElementById("suggestions");
//             suggestions.innerHTML = "";
//             if (data.length === 0) {
//                 suggestions.innerHTML = "<div class='p-2 text-gray-500'>No patient found</div>";
//             } else {
//                 data.forEach(patient => {
//                     let div = document.createElement("div");
//                     div.classList.add("p-2", "cursor-pointer", "hover:bg-gray-100");
//                     div.innerText = patient.Name;
//                     div.onclick = function() {
//                         document.getElementById("patientName").value = patient.Name;
//                         document.getElementById("patientIDHidden").value = patient.PatientID; // Fixed ID reference
//                         suggestions.classList.add("hidden");
//                     };
//                     suggestions.appendChild(div);
//                 });
//             }
//             suggestions.classList.remove("hidden");
//         })
//         .catch(error => console.error("Error fetching patients:", error));
// });

// document.querySelector("#patientName").addEventListener("input", async function () {
//     let searchValue = this.value.trim();

//     if (searchValue.length >= 2) {
//         try {
//             const response = await fetch(`/search-patient?name=${searchValue}`);
//             const patients = await response.json();

//             let dropdown = document.querySelector("#suggestions");
//             dropdown.innerHTML = ""; // Clear previous results

//             if (patients.length === 0) {
//                 dropdown.innerHTML = "<div class='p-2 text-gray-500'>No patient found</div>";
//             } else {
//                 patients.forEach(patient => {
//                     let option = document.createElement("div");
//                     option.textContent = `${patient.Name} (ID: ${patient.PatientID})`;
//                     option.setAttribute("data-id", patient.PatientID);
//                     option.classList.add("p-2", "cursor-pointer", "hover:bg-gray-100");

//                     option.addEventListener("click", function () {
//                         document.querySelector("#patientName").value = patient.Name;
//                         document.querySelector("#patientIDHidden").value = patient.PatientID;
//                         dropdown.classList.add("hidden");
//                     });

//                     dropdown.appendChild(option);
//                 });
//             }
//             dropdown.classList.remove("hidden");
//         } catch (error) {
//             console.error("Error fetching patients:", error);
//         }
//     } else {
//         document.getElementById("suggestions").classList.add("hidden");
//     }
// });


// document.getElementById("patientNameMedRec").addEventListener("input", function() {
//   handlePatientSearch(this, "suggestionsMedRec", "patientIDHiddenMedRec");
// });

// // For Prescriptions
// document.getElementById("patientNamePres").addEventListener("input", function() {
//   handlePatientSearch(this, "suggestionsPres", "patientIDHiddenPres");
// });


// Generic handler function

// function handlePatientSearch(inputElement, suggestionsId, hiddenId) {
//   let query = inputElement.value.trim();
//   if (query.length < 2) {
//     document.getElementById(suggestionsId).classList.add("hidden");
//     return;
//   }

//   fetch(`/search-patient?query=${query}`)
//     .then(response => response.json())
//     .then(data => {
//       const suggestions = document.getElementById(suggestionsId);
//       suggestions.innerHTML = "";
//       data.forEach(patient => {
//         const div = document.createElement("div");
//         div.textContent = patient.Name;
//         div.onclick = () => {
//           inputElement.value = patient.Name;
//           document.getElementById(hiddenId).value = patient.PatientID;
//           suggestions.classList.add("hidden");
//         };
//         suggestions.appendChild(div);
//       });
//       suggestions.classList.remove("hidden");
//     });
// }


//delete patient reln


// Generic handler function for all patient search inputs
function setupPatientSearch(inputId, suggestionsId, hiddenId) {
    const input = document.getElementById(inputId);
    const suggestions = document.getElementById(suggestionsId);
    
    input.addEventListener("input", function() {
        let query = this.value.trim();
        if (query.length < 2) {
            suggestions.classList.add("hidden");
            return;
        }

        fetch(`/search-patient?query=${query}`)
            .then(response => response.json())
            .then(data => {
                suggestions.innerHTML = "";
                if (data.length === 0) {
                    suggestions.innerHTML = "<div class='p-2 text-gray-500'>No patient found</div>";
                } else {
                    data.forEach(patient => {
                        let div = document.createElement("div");
                        div.classList.add("p-2", "cursor-pointer", "hover:bg-gray-100");
                        div.innerText = patient.Name;
                        div.onclick = function() {
                            input.value = patient.Name;
                            document.getElementById(hiddenId).value = patient.PatientID;
                            suggestions.classList.add("hidden");
                        };
                        suggestions.appendChild(div);
                    });
                }
                suggestions.classList.remove("hidden");
            })
            .catch(error => console.error("Error fetching patients:", error));
    });

    // Close suggestions when clicking outside
    document.addEventListener('click', function(event) {
        if (!input.contains(event.target) && !suggestions.contains(event.target)) {
            suggestions.classList.add("hidden");
        }
    });
}

// Initialize all search inputs
document.addEventListener('DOMContentLoaded', function() {
    setupPatientSearch('patientNameAddPat', 'suggestionsAddPat', 'patientIDHiddenAddPat');
    setupPatientSearch('patientNameMedRec', 'suggestionsMedRec', 'patientIDHiddenMedRec');
    setupPatientSearch('patientNamePres', 'suggestionsPres', 'patientIDHiddenPres');
    
    
});

function deleteItem(id, type) {
    let confirmMessage;
    let url;

    // Determine the URL and confirmation message based on the type
    switch(type) {
        case 'relation':
            confirmMessage = `Are you sure you want to delete this Relation?`;
            url = `/doctor/deleteRelation/${id}`;
            break;
        case 'record':
            confirmMessage = `Are you sure you want to delete this Record?`;
            url = `/doctor/deleteRecord/${id}`;
            break;
        case 'prescription':
            confirmMessage = `Are you sure you want to delete this Prescription?`;
            url = `/doctor/deletePres/${id}`;
            break;
        default:
            console.error('Unknown type:', type);
            return; // Exit if type is unknown
    }

    // Show confirmation dialog
    if (!confirm(confirmMessage)) {
        return; // Exit if the user cancels
    }

    // Perform the delete operation
    fetch(url, {
        method: 'DELETE',
        headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
        },
        credentials: 'include' // Ensure cookies are sent with the request
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(error => {
                throw new Error(error.message || `An error occurred while deleting the ${type}s.`);
            });
        }
        return response.json(); // Parse JSON response on success
    })
    .then(data => {
        // Redirect instead of reload to prevent form resubmission
        window.location.href = '/doctor?success=' + encodeURIComponent(data.message);
    })
    .catch(error => {
        console.error('Error deleting:', error);
        alert(`Failed to delete: ${error.message}`);
    });
}

document.addEventListener('DOMContentLoaded', () => {
        // Sidebar functionality
        const sidebar = document.querySelector('aside');
        const hamburger = document.getElementById('hamburger');
        const closeIcon = document.getElementById('close-icon');
    
        function toggleSidebar() {
            sidebar.classList.toggle('open');
        }
    
        function closeSidebar() {
            sidebar.classList.remove('open');
        }
    
        hamburger.addEventListener('click', toggleSidebar);
        closeIcon.addEventListener('click', closeSidebar);
        
        // Function to close toast notification
        function closeToast() {
            const toast = document.getElementById('toast');
            if (toast) {
                toast.style.transform = 'translateX(100%)';
                toast.style.zIndex = '9999';
                setTimeout(() => toast.remove(), 500);
            }
        }
    
        // Automatically close the toast after 5 seconds
        const toast = document.getElementById('toast');
        if (toast) {
            toast.style.zIndex = '9999';
            setTimeout(closeToast, 5000);
        }
        
    });
    
</script>
</body>
</html>