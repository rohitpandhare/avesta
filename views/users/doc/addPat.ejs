<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Doctor- Add Patient</title>
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/users.css">
</head>

<body class="bg-gray-100 min-h-screen font-sans antialiased">
<!-- // here it was removed -->
<%- include('nav') -%>
  <div id="main-content" class="space-y-12">

      <!-- add patients  -->
  <section class="space-y-6" id="addPatForm">
        <!-- patient reg form  -->
        <div class="bg-white rounded-lg shadow-md p-6">
          <h3 class="text-xl font-semibold text-gray-800 mb-6">Add Patients</h3>
          <form action="/doctor/addPatient" method="POST" class="space-y-4">
            <div class="hidden">
              <input type="number" name="DoctorID" value="<%= user.DoctorID %>" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
            </div>
            <!-- <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Patient ID</label>
              <input type="number" name="PatientID" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
            </div> -->
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Patient Name</label>
              <input type="text" id="patientNameAddPat" name="patientName" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" autocomplete="off">
              
              <div id="suggestionsAddPat" class="absolute z-10 bg-white border border-gray-300 w-full rounded-md mt-1 hidden"></div>
          
              <!-- Hidden field to store the selected Patient ID -->
              <input type="hidden" id="patientIDHiddenAddPat" name="PatientID">
          </div>

            <div class="hidden">
              <label class="block text-sm font-medium text-gray-700 mb-1" >First Consultation Date</label>
              <input type="date" name="FirstConsultation" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" value="<%= new Date().toISOString().split('T')[0] %>"  id="statics">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Consultation Type</label>
              <select name="ConsultationType" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" id="statics" >
                <option value="REGULAR">REGULAR</option>
                <option value="EMERGENCY">EMERGENCY</option>
                <option value="FOLLOWUP">FOLLOWUP</option>
              </select>
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Treatment Notes</label>
              <textarea name="TreatmentNotes" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-24"></textarea>
            </div>
            <button type="submit" class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">Submit</button>
          </form>
        </div>

    </section>
    
  </div>

</main>
</div>

<script>
    
// coommon handler function for all patient search inputs
function setupPatientSearch(inputId, suggestionsId, hiddenId) {
    const input = document.getElementById(inputId);
    const suggestions = document.getElementById(suggestionsId);
    
    input.addEventListener("input", function() {
        let query = this.value.trim();
        if (query.length < 2) {
            suggestions.classList.add("hidden");
            return;
        }

        fetch(`/search-patient?query=${query}`)
            .then(response => response.json())
            .then(data => {
                suggestions.innerHTML = "";
                if (data.length === 0) {
                    suggestions.innerHTML = "<div class='p-2 text-gray-500'>No patient found</div>";
                } else {
                    data.forEach(patient => {
                        let div = document.createElement("div");
                        div.classList.add("p-2", "cursor-pointer", "hover:bg-gray-100");
                        div.innerText = patient.Name;
                        div.onclick = function() {
                            input.value = patient.Name;
                            document.getElementById(hiddenId).value = patient.PatientID;
                            suggestions.classList.add("hidden");
                        };
                        suggestions.appendChild(div);
                    });
                }
                suggestions.classList.remove("hidden");
            })
            .catch(error => console.error("Error fetching patients:", error));
    });

    // Close suggestions when clicking outside
    document.addEventListener('click', function(event) {
        if (!input.contains(event.target) && !suggestions.contains(event.target)) {
            suggestions.classList.add("hidden");
        }
    });
}

// Initialize all search inputs
document.addEventListener('DOMContentLoaded', function() {
    setupPatientSearch('patientNameAddPat', 'suggestionsAddPat', 'patientIDHiddenAddPat');
});

//sidebar ffunc
document.addEventListener('DOMContentLoaded', () => {
        // Sidebar functionality
        const sidebar = document.querySelector('aside');
        const hamburger = document.getElementById('hamburger');
        const closeIcon = document.getElementById('close-icon');
    
        function toggleSidebar() {
            sidebar.classList.toggle('open');
        }
    
        function closeSidebar() {
            sidebar.classList.remove('open');
        }
    
        hamburger.addEventListener('click', toggleSidebar);
        closeIcon.addEventListener('click', closeSidebar);
        
        // Function to close toast notification
        function closeToast() {
            const toast = document.getElementById('toast');
            if (toast) {
                toast.style.transform = 'translateX(100%)';
                toast.style.zIndex = '9999';
                setTimeout(() => toast.remove(), 500);
            }
        }
    
        // Automatically close the toast after 5 seconds
        const toast = document.getElementById('toast');
        if (toast) {
            toast.style.zIndex = '9999';
            setTimeout(closeToast, 5000);
        }
        
    });
    
  </script>

  <!-- <script src="/javascripts/doctorHelp.js"></script> -->
</body>
</html>
