<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Doctor Dashboard</title>
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/users.css">
</head>

<body class="bg-gray-100 min-h-screen font-sans antialiased">
<%- include('nav') -%>
  <div id="main-content" class="space-y-12" style="margin-left: 120px;">

    <!-- add prescriptions  -->
    <section class="space-y-6" id="prescriptions-section">
    
      <!-- Add Prescription Form -->
      <div class="bg-white rounded-lg shadow-md p-6" id="addPres">
        <h3 class="text-xl font-semibold text-gray-800 mb-6">Add Prescription</h3>
        <form action="/doctor/addPres" method="POST" class="space-y-6">
          <!-- Hidden DoctorID field (keep this) -->
          <div class="hidden">
            <input type="number" name="DoctorID" value="<%= user.DoctorID %>" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
          </div>
          <!-- <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Patient ID</label>
              <input type="number" name="PatientID" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
            </div> -->
            
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Left Column -->
            <div class="space-y-6">
              <!-- Patient Name with Search -->
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Patient Name</label>
                <div class="relative">
                  <input type="text" id="patientNamePres" name="patientName" required 
                        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" 
                        autocomplete="off">
                  <div id="suggestionsPres" class="absolute z-10 bg-white border border-gray-300 w-full rounded-md mt-1 hidden shadow-lg max-h-60 overflow-y-auto"></div>
                </div>
                <input type="hidden" id="patientIDHiddenPres" name="PatientID">
              </div>

              <!-- Diagnosis Notes -->
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Diagnosis Notes</label>
                <textarea name="DiagnosisNotes" required 
                          class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-32"></textarea>
              </div>
              
              <!-- Status and Date -->
                <div class="hidden">
                  <label class="block text-sm font-medium text-gray-700 mb-2">Status</label>
                  <select name="Status" required id="statics"
                          class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    <option value="ACTIVE">ACTIVE</option>
                    <!-- <option value="INACTIVE">INACTIVE</option> -->
                  </select>
                </div>
                <div class="hidden"> 
                  <label class="block text-sm font-medium text-gray-700 mb-2">Date Issued</label>
                  <input type="date" name="DateIssued" required id="statics"
                        value="<%= new Date().toISOString().split('T')[0] %>" 
                        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
              </div>

            <!-- Right Column -->
            <div class="space-y-6">

              <div id="medicine-container">
                <!-- First medicine entry with defaults checked -->
                <div class="medicine-entry" data-medicine-index="0">
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Medicine Name</label>
                            <div class="relative">
                                <input type="text" id="medName" name="medicines[0][MedicineName]" required 
                                        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500" 
                                        autocomplete="off">
                                <div id="suggestMed" class="absolute z-10 bg-white border border-gray-300 w-full rounded-md mt-1 hidden shadow-lg max-h-60 overflow-y-auto"></div>
                            </div>
                            <input type="hidden" id="hiddenMed" name="medicines[0][MedicineID]">
                          </div>
                    
                        <div>
                            <label class="block mb-1">Dosage</label>
                            <input type="text" name="medicines[0][Dosage]" required class="w-full border p-2 rounded">
                        </div>
                    </div>
            
                    <div class="mt-3">
                        <label class="block mb-1">Instructions</label>
                        <textarea name="medicines[0][Instructions]" class="w-full border p-2 rounded"></textarea>
                    </div>
            
                    <div class="mt-3">
                        <label class="block mb-1">Take Medicine</label>
                        <div class="food-checkboxes">
                            <div class="checkbox-group">
                                <input type="checkbox" id="med0-before" name="medicines[0][BeforeFood]" value="true">
                                <label for="med0-before" class="ml-2">Before Food</label>
                            </div>
                            <div class="checkbox-group">
                                <input type="checkbox" id="med0-after" name="medicines[0][AfterFood]" value="true" checked>
                                <label for="med0-after" class="ml-2">After Food</label>
                            </div>
                        </div>
                    </div>
            
                    <div class="mt-3">
                        <label class="block mb-1">Timing</label>
                        <div class="timing-checkboxes">
                            <div class="checkbox-group">
                                <input type="checkbox" id="med0-morning" name="medicines[0][Morning]" value="true" checked>
                                <label for="med0-morning" class="ml-2">Morning</label>
                            </div>
                            <div class="checkbox-group">
                                <input type="checkbox" id="med0-afternoon" name="medicines[0][Afternoon]" value="true">
                                <label for="med0-afternoon" class="ml-2">Afternoon</label>
                            </div>
                            <div class="checkbox-group">
                                <input type="checkbox" id="med0-evening" name="medicines[0][Evening]" value="true" checked>
                                <label for="med0-evening" class="ml-2">Evening</label>
                            </div>
                            <div class="checkbox-group">
                                <input type="checkbox" id="med0-night" name="medicines[0][Night]" value="true">
                                <label for="med0-night" class="ml-2">Night</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <button type="button" id="add-medicine" class="mt-4 bg-blue-100 text-blue-600 p-2 rounded hover:bg-blue-200">
                + Add Another Medicine
            </button>  

            </div>
          </div>

          <!-- Submit Button -->
          <div class="mt-6">
            <button type="submit" 
                    class="w-full bg-blue-600 text-white py-3 px-4 rounded-md hover:bg-blue-700 transition-colors focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
              Submit Prescription
            </button>
          </div>
        </form>
      </div>
    </section>

  </div>

</main>
</div>

<script>
    
// coommon handler function for all patient search inputs
function setupPatientSearch(inputId, suggestionsId, hiddenId) {
    const input = document.getElementById(inputId);
    const suggestions = document.getElementById(suggestionsId);
    
    input.addEventListener("input", function() {
        let query = this.value.trim();
        if (query.length < 2) {
            suggestions.classList.add("hidden");
            return;
        }

        fetch(`/search-patient?query=${query}`)
            .then(response => response.json())
            .then(data => {
                suggestions.innerHTML = "";
                if (data.length === 0) {
                    suggestions.innerHTML = "<div class='p-2 text-gray-500'>No patient found</div>";
                } else {
                    data.forEach(patient => {
                        let div = document.createElement("div");
                        div.classList.add("p-2", "cursor-pointer", "hover:bg-gray-100");
                        div.innerText = patient.Name;
                        div.onclick = function() {
                            input.value = patient.Name;
                            document.getElementById(hiddenId).value = patient.PatientID;
                            suggestions.classList.add("hidden");
                        };
                        suggestions.appendChild(div);
                    });
                }
                suggestions.classList.remove("hidden");
            })
            .catch(error => console.error("Error fetching patients:", error));
    });

    // Close suggestions when clicking outside
    document.addEventListener('click', function(event) {
        if (!input.contains(event.target) && !suggestions.contains(event.target)) {
            suggestions.classList.add("hidden");
        }
    });
}

// Initialize all search inputs
document.addEventListener('DOMContentLoaded', function() {
    setupPatientSearch('patientNamePres', 'suggestionsPres', 'patientIDHiddenPres');
});

//sidebar ffunc
document.addEventListener('DOMContentLoaded', () => {
        // Sidebar functionality
        const sidebar = document.querySelector('aside');
        const hamburger = document.getElementById('hamburger');
        const closeIcon = document.getElementById('close-icon');
    
        function toggleSidebar() {
            sidebar.classList.toggle('open');
        }
    
        function closeSidebar() {
            sidebar.classList.remove('open');
        }
    
        hamburger.addEventListener('click', toggleSidebar);
        closeIcon.addEventListener('click', closeSidebar);
        
        // Function to close toast notification
        function closeToast() {
            const toast = document.getElementById('toast');
            if (toast) {
                toast.style.transform = 'translateX(100%)';
                toast.style.zIndex = '9999';
                setTimeout(() => toast.remove(), 500);
            }
        }
    
        // Automatically close the toast after 5 seconds
        const toast = document.getElementById('toast');
        if (toast) {
            toast.style.zIndex = '9999';
            setTimeout(closeToast, 5000);
        }
        
    });
    
  document.getElementById('add-medicine').addEventListener('click', function() {
      const container = document.getElementById('medicine-container');
      const index = container.children.length;
      const newMedicine = container.firstElementChild.cloneNode(true);
      
      // Update all attributes and names with new index
      newMedicine.setAttribute('data-medicine-index', index);
      newMedicine.querySelectorAll('[name]').forEach(el => {
          el.name = el.name.replace(/\[\d+\]/, `[${index}]`);
          el.id = el.id.replace(/\d+/, index);
          if (el.type === 'checkbox' && !el.name.includes('BeforeFood')) {
              el.checked = el.name.includes('Morning') || 
                              el.name.includes('Evening') || 
                              el.name.includes('AfterFood');
          }
      });
      
      // Clear input values except checkboxes
      newMedicine.querySelectorAll('input[type="text"], textarea').forEach(el => {
          el.value = '';
      });
      
      container.appendChild(newMedicine);
  });

  function setupMedSearch(inputId, suggestionsId, hiddenId) {
    const input = document.getElementById(inputId);
    const suggestions = document.getElementById(suggestionsId);
    const hiddenInput = document.getElementById(hiddenId);
    let selectedMedicine = null;

    input.addEventListener("input", function() {
        let query = this.value.trim();

        // If the input value matches the selected medicine, don't show suggestions
        if (selectedMedicine && query === selectedMedicine) {
            suggestions.classList.add("hidden");
            return;
        }

        // Reset selectedMedicine if the user modifies the input
        selectedMedicine = null;

        if (query.length < 2) {
            suggestions.classList.add("hidden");
            return;
        }

        fetch(`/search-med?query=${query}`)
            .then(response => response.json())
            .then(data => {
                suggestions.innerHTML = "";
                if (data.length === 0) {
                    suggestions.innerHTML = "<div class='p-2 text-gray-500'>No medicines found</div>";
                    suggestions.classList.remove("hidden");
                } else {
                    data.forEach(medicine => {
                        let div = document.createElement("div");
                        div.classList.add("p-2", "cursor-pointer", "hover:bg-gray-100");
                        div.innerText = medicine.name;
                        div.onclick = function() {
                            input.value = medicine.name;
                            hiddenInput.value = medicine.id; // Store the medicine ID
                            selectedMedicine = medicine.name;
                            suggestions.classList.add("hidden");
                        };
                        suggestions.appendChild(div);
                    });
                    suggestions.classList.remove("hidden");
                }
            })
            .catch(error => {
                console.error("Error fetching medicines:", error);
                suggestions.innerHTML = "<div class='p-2 text-red-500'>Error fetching suggestions</div>";
                suggestions.classList.remove("hidden");
            });
    });

    document.addEventListener('click', function(event) {
        if (!input.contains(event.target) && !suggestions.contains(event.target)) {
            suggestions.classList.add("hidden");
        }
    });
}

// Initialize all search inputs
document.addEventListener('DOMContentLoaded', function() {
    setupMedSearch('medName', 'suggestMed', 'hiddenMed');
});

</script>
  <!-- <script src="/javascripts/doctorHelp.js"></script> -->
</body>
</html>
