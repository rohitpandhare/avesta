<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Doctor Dashboard</title>
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/users.css">
</head>

<body class="bg-gray-100 min-h-screen font-sans antialiased">
  <%- include('nav') -%>
      <div id="main-content" class="space-y-12" style="margin-left: 120px;">

        <!-- add medical records  -->
        <section class="space-y-6" id="records-section">
        
          <!-- add medical rec  -->
          <div class="bg-white rounded-lg shadow-md p-6" id="addMedRec">
            <h3 class="text-xl font-semibold text-gray-800 mb-6">Add Medical Record</h3>
            <form action="/doctor/addMedRec" method="POST" class="space-y-6">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="hidden">
                  <input type="number" name="DoctorID" value="<%= user.DoctorID %>" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                </div>
            
                <!-- Column 1 -->
                  <div class="space-y-6">
                    <div>
                      <label class="block text-sm font-medium text-gray-700 mb-2">Patient Name</label>
                      <div class="relative">
                      <input type="text" id="patientNameMedRec" name="patientName" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">

                      <div id="suggestionsMedRec" class="absolute z-10 bg-white border border-gray-300 w-full rounded-md mt-1 hidden shadow-lg"></div>
                      </div>
                      <input type="hidden" id="patientIDHiddenMedRec" name="PatientID">
                      </div>

                    <div>
                      <label class="block text-sm font-medium text-gray-700 mb-2">Diagnosis</label>
                      <input type="text" name="Diagnosis" required 
                            class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    </div>

                    <div>
                      <label class="block text-sm font-medium text-gray-700 mb-2">Symptoms</label>
                      <textarea name="Symptoms" required 
                                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-32"></textarea>
                    </div>
                  </div>

                  <!-- Column 2 -->
                  <div class="space-y-6">
                    <div>
                      <label class="block text-sm font-medium text-gray-700 mb-2">Treatments</label>
                      <textarea name="Treatments" required 
                                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-32"></textarea>
                    </div>

                    <div class="hidden">
                      <label class="block text-sm font-medium text-gray-700 mb-2">Record Date</label>
                      <input type="date" name="RecordDate" required id="statics"
                            value="<%= new Date().toISOString().split('T')[0] %>" 
                            class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    </div>

                    <div>
                      <label class="block text-sm font-medium text-gray-700 mb-2">Notes</label>
                      <textarea name="Notes" required 
                                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-24"></textarea>
                    </div>

                    <div class="hidden">
                      <label class="block text-sm font-medium text-gray-700 mb-2">Updated By</label>
                      <select name="UpdatedBy" required id="statics"
                              class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <option value="DOCTOR">DOCTOR</option>
                        <option value="STAFF">STAFF</option>
                      </select>
                    </div>
                  </div>
                </div>

                <!-- Submit button outside the grid -->
                <div class="mt-6">
                  <button type="submit" class="w-full bg-blue-600 text-white py-3 px-4 rounded-md hover:bg-blue-700 transition-colors focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
                    Submit
                  </button>
              </div>
              </form>
          </div>
              
        </section>
      
      </div>

    </main>
  </div>

<script>
    
// coommon handler function for all patient search inputs
function setupPatientSearch(inputId, suggestionsId, hiddenId) {
    const input = document.getElementById(inputId);
    const suggestions = document.getElementById(suggestionsId);
    
    input.addEventListener("input", function() {
        let query = this.value.trim();
        if (query.length < 2) {
            suggestions.classList.add("hidden");
            return;
        }

        fetch(`/search-patient?query=${query}`)
            .then(response => response.json())
            .then(data => {
                suggestions.innerHTML = "";
                if (data.length === 0) {
                    suggestions.innerHTML = "<div class='p-2 text-gray-500'>No patient found</div>";
                } else {
                    data.forEach(patient => {
                        let div = document.createElement("div");
                        div.classList.add("p-2", "cursor-pointer", "hover:bg-gray-100");
                        div.innerText = patient.Name;
                        div.onclick = function() {
                            input.value = patient.Name;
                            document.getElementById(hiddenId).value = patient.PatientID;
                            suggestions.classList.add("hidden");
                        };
                        suggestions.appendChild(div);
                    });
                }
                suggestions.classList.remove("hidden");
            })
            .catch(error => console.error("Error fetching patients:", error));
    });

    // Close suggestions when clicking outside
    document.addEventListener('click', function(event) {
        if (!input.contains(event.target) && !suggestions.contains(event.target)) {
            suggestions.classList.add("hidden");
        }
    });
}

// Initialize all search inputs
document.addEventListener('DOMContentLoaded', function() {
    setupPatientSearch('patientNameMedRec', 'suggestionsMedRec', 'patientIDHiddenMedRec');
});

//sidebar ffunc
document.addEventListener('DOMContentLoaded', () => {
        // Sidebar functionality
        const sidebar = document.querySelector('aside');
        const hamburger = document.getElementById('hamburger');
        const closeIcon = document.getElementById('close-icon');
    
        function toggleSidebar() {
            sidebar.classList.toggle('open');
        }
    
        function closeSidebar() {
            sidebar.classList.remove('open');
        }
    
        hamburger.addEventListener('click', toggleSidebar);
        closeIcon.addEventListener('click', closeSidebar);
        
        // Function to close toast notification
        function closeToast() {
            const toast = document.getElementById('toast');
            if (toast) {
                toast.style.transform = 'translateX(100%)';
                toast.style.zIndex = '9999';
                setTimeout(() => toast.remove(), 500);
            }
        }
    
        // Automatically close the toast after 5 seconds
        const toast = document.getElementById('toast');
        if (toast) {
            toast.style.zIndex = '9999';
            setTimeout(closeToast, 5000);
        }
        
    });

</script>
  <!-- <script src="/javascripts/doctorHelp.js"></script> -->
</body>
</html>
