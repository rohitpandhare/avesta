<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Doctor Dashboard</title>
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/users.css">
</head>

<body class="bg-gray-100 min-h-screen font-sans antialiased">
  <%- include('nav') -%>
  
      <div id="main-content" class="space-y-12">

        <h2 class="text-2xl font-semibold text-gray-800">Prescriptions</h2>

         <!-- View Prescriptions Table -->
         <div class="bg-white rounded-lg shadow overflow-hidden">
            <div class="overflow-x-auto max-h-[500px]">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50 sticky top-0">
                        <tr>
                            <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Date Issued</th>
                            <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Patient Name</th>
                            <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Diagnosis Notes</th>
                            <!-- <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Medicines</th> -->
                            <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Status</th>
                            <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Reference ID</th>
                            <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700">Activity</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200">
                        <% if (prescriptions && prescriptions.length > 0) { %>
                            <% prescriptions.forEach(prescription => { %>
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <%= new Date(prescription.DateIssued).toLocaleDateString('en-US', { 
                                            year: 'numeric', 
                                            month: 'short', 
                                            day: 'numeric' 
                                        }) %>
                                    </td>
                                    <td class="px-6 py-4"><%= prescription.PatientName || 'N/A' %></td>
                                    <td class="px-6 py-4 max-w-xs"><%= prescription.DiagnosisNotes || 'N/A' %></td>
                               
                              
                                    <td class="px-6 py-4">
                                        <span class="px-2 py-1 text-xs font-medium rounded-full <%= prescription.Status === 'ACTIVE' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800' %>">
                                            <%= prescription.Status %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 font-mono"><%= prescription.GlobalReferenceID %></td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <button onclick="reviveItem('<%= prescription.PrescriptionID %>','prescription')" 
                                                class="bg-green-500 text-white px-3 py-1 rounded hover:bg-green-600 transition-colors">
                                            Activate
                                        </button>
                                    </td>
                                </tr>
                            <% }) %>
                        <% } else { %>
                            <tr>
                                <td colspan="7" class="px-6 py-4 text-center text-gray-500">No prescriptions found</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
          </div>
          
      </div>

    </main>
  </div>

<script>
function reviveItem(id, type) {
    let confirmMessage;
    let url;

    // Determine the URL and confirmation message based on the type
    switch(type) {
        case 'prescription':
            confirmMessage = `Are you sure you want to activate this Prescription?`;
            url = `/doctor/revivePres/${id}`;
            break;
        default:
            console.error('Unknown type:', type);
            return; // Exit if type is unknown
    }

    // Show confirmation dialog
    if (!confirm(confirmMessage)) {
        return; // Exit if the user cancels
    }

    // Perform the delete operation
    fetch(url, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
        },
        credentials: 'include' // Ensure cookies are sent with the request
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(error => {
                throw new Error(error.message || `An error occurred while reviving the ${type}s.`);
            });
        }
        return response.json(); // Parse JSON response on success
    })
    .then(data => {
        // Redirect instead of reload to prevent form resubmission
        window.location.href = '/doctor?success=' + encodeURIComponent(data.message);
    })
    .catch(error => {
        console.error('Error activating:', error);
        alert(`Failed to activate: ${error.message}`);
    });
}
  
//sidebar ffunc
document.addEventListener('DOMContentLoaded', () => {
        // Sidebar functionality
        const sidebar = document.querySelector('aside');
        const hamburger = document.getElementById('hamburger');
        const closeIcon = document.getElementById('close-icon');
    
        function toggleSidebar() {
            sidebar.classList.toggle('open');
        }
    
        function closeSidebar() {
            sidebar.classList.remove('open');
        }
    
        hamburger.addEventListener('click', toggleSidebar);
        closeIcon.addEventListener('click', closeSidebar);
        
        // Function to close toast notification
        function closeToast() {
            const toast = document.getElementById('toast');
            if (toast) {
                toast.style.transform = 'translateX(100%)';
                toast.style.zIndex = '9999';
                setTimeout(() => toast.remove(), 500);
            }
        }
    
        // Automatically close the toast after 5 seconds
        const toast = document.getElementById('toast');
        if (toast) {
            toast.style.zIndex = '9999';
            setTimeout(closeToast, 5000);
        }
        
    });
    

</script>
</body>
</html>
